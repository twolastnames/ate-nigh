/*****************************************************
* DO NOT MODIFY THIS!!!
* Edit the schemas.json file at the base of the project
* then run "npm run dbschema" to regenerate this
*****************************************************/

//import type { NextApiRequest, NextApiResponse } from "next";
import { NextRequest, NextResponse } from "next/server";
import { doRouteGet } from "<%= backPath %>helpers"
import * as finalizers from "<%= backPath %>finalizers"

/* eslint-disable @typescript-eslint/no-unused-vars */
import {
<% for(const type of types) { %><%= type %>Type,<% } %>
} from "<%= backPath %>../../types/db"

import {
<% for(const model of Object.keys(schemas.collections)) { %><%= model %>,<% } %>
} from "<%= backPath %>../../util/db"
/* eslint-enable @typescript-eslint/no-unused-vars */

<%   if(aggregation) { %>
// eslint-disable-next-line @typescript-eslint/no-unused-vars
export async function GET(request: NextRequest) {
  return doRouteGet(
    <%= aggregation.model %>,
    <%- JSON.stringify(aggregation.pipeline) %>,
    request,
    finalizers.<%= aggregation.finalizer %>
  )
}
<%   } %>

<%   if(collection) { %>
// eslint-disable-next-line @typescript-eslint/no-unused-vars
export async function POST(request: NextRequest) {
  const model = new <%= path %>(await request.json())
  model.save()
}
<%   } %>
